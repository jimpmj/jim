<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 务必配置正确namespace 就是所映射的实体类 -->
<mapper namespace="com.xuanwu.im.topic.dao.TopicInfoDao">

    <resultMap type="TopicInfo" id="TopicInfoMap">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="app_id" property="appId"/>
        <result column="tenant_id" property="tenantId"/>
        <result column="topic_owner_type" property="topicOwnerType"/>
        <result column="topic_type" property="topicType"/>
        <result column="created" property="created"/>
        <result column="created_by" property="createdBy"/>
        <result column="updated" property="updated"/>
        <result column="updated_by" property="updatedBy"/>
    </resultMap>

    <!-- 新增 -->
    <insert id="add" parameterType="TopicInfo" keyProperty="id"
            useGeneratedKeys="true">
        insert into topic_info(
        name,
        app_id,
        tenant_id,
        topic_owner_type,
        topic_type,
        created,
        created_by,
        updated,
        updated_by
        )
        values
        (
        #{name},
        #{appId},
        #{tenantId},
        #{topicOwnerType},
        #{topicType},
        #{created},
        #{createdBy},
        #{updated},
        #{updatedBy}
        )
    </insert>

    <!-- 更新 -->
    <update id="update" parameterType="TopicInfo">
        update topic_info set
        name=#{name},
        app_id=#{appId},
        tenant_id=#{tenantId},
        topic_owner_type=#{topicOwnerType},
        topic_type=#{topicType},
        created=#{created},
        created_by=#{createdBy},
        updated=#{updated},
        updated_by=#{updatedBy}
        where
        id=#{id}
    </update>

    <!-- 根据ID删除 -->
    <delete id="removeById" parameterType="int">
        delete from topic_info where id = #{id}
    </delete>

    <!-- 根据topic名字删除 -->
    <delete id="removeByNames" parameterType="collection">
        delete from topic_info where name in
        <foreach collection="list" item="topicName" separator="," open="(" close=")">
            #{topicName}
        </foreach>
    </delete>

    <!-- 根据条件删除 -->
    <delete id="remove" parameterType="TopicInfo">
        delete from topic_info where 1=1
        <if test="id != null">
            and id=#{id}
        </if>
        <if test="name != null">
            and name=#{name}
        </if>
        <if test="appId != null">
            and app_id=#{appId}
        </if>
        <if test="tenantId != null">
            and tenant_id=#{tenantId}
        </if>
        <if test="topicOwnerType != null">
            and topic_owner_type=#{topicOwnerType}
        </if>
        <if test="topicOwnerType != null">
            and topic_type=#{topicType}
        </if>
        <if test="created != null">
            and created=#{created}
        </if>
        <if test="createdBy != null">
            and created_by=#{createdBy}
        </if>
        <if test="updated != null">
            and updated=#{updated}
        </if>
        <if test="updatedBy != null">
            and updated_by=#{updatedBy}
        </if>
    </delete>

    <!-- 根据id查询 -->
    <select id="getById" resultMap="TopicInfoMap" parameterType="int">
        select * from topic_info where id =#{id}
    </select>

    <!-- 条件查询拼接 -->
    <sql id="findResultsWhere">
        <where>
            <if test="params.id != null">
                and id = #{params.id}
            </if>
            <if test="params.name != null">
                and name = #{params.name}
            </if>
            <if test="params.appId != null">
                and app_id = #{params.appId}
            </if>
            <if test="params.tenantId != null">
                and tenant_id = #{params.tenantId}
            </if>
            <if test="params.topicOwnerType != null">
                and topic_owner_type=#{params.topicOwnerType}
            </if>
            <if test="params.topicOwnerType != null">
                and topic_type=#{params.topicType}
            </if>
            <if test="params.created != null">
                and created = #{params.created}
            </if>
            <if test="params.createdBy != null">
                and created_by = #{params.createdBy}
            </if>
            <if test="params.updated != null">
                and updated = #{params.updated}
            </if>
            <if test="params.updatedBy != null">
                and updated_by = #{params.updatedBy}
            </if>
        </where>
    </sql>

    <!-- 按example条件查询拼接 -->
    <sql id="findByExampleWhere">
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null">
                and name = #{name}
            </if>
            <if test="appId != null">
                and app_id = #{appId}
            </if>
            <if test="tenantId != null">
                and tenant_id = #{tenantId}
            </if>
            <if test="topicOwnerType != null">
                and topic_owner_type=#{topicOwnerType}
            </if>
            <if test="topicType != null">
                and topic_type=#{topicType}
            </if>
            <if test="created != null">
                and created = #{created}
            </if>
            <if test="createdBy != null">
                and created_by = #{createdBy}
            </if>
            <if test="updated != null">
                and updated = #{updated}
            </if>
            <if test="updatedBy != null">
                and updated_by = #{updatedBy}
            </if>
        </where>
    </sql>

    <!-- 条件查询 -->
    <select id="findResults" resultMap="TopicInfoMap" parameterType="map">
        select * from topic_info
        <include refid="findResultsWhere"></include>
        <if test="params.page != null">
            limit #{params.page.from}, #{params.page.size}
        </if>
    </select>

    <!-- 按实体查询 -->
    <select id="findByExample" resultMap="TopicInfoMap" parameterType="TopicInfo">
        select * from topic_info
        <include refid="findByExampleWhere"/>
    </select>

    <!-- 按实体查询,返回count -->
    <select id="findByExampleCount" resultType="int" parameterType="TopicInfo">
        select count(1) from topic_info
        <include refid="findByExampleWhere"/>
    </select>

    <!-- 条件查询结果数量 -->
    <select id="findResultCount" resultType="int" parameterType="map">
        select count(1) from topic_info
        <include refid="findResultsWhere"/>
    </select>

    <select id="findByTopicNames" resultMap="TopicInfoMap" parameterType="collection">
        select * from topic_info where name in
        <foreach collection="list" item="topicName" open="(" separator="," close=")">
            #{topicName}
        </foreach>
    </select>

    <!-- 批量插入 -->
    <insert id="addBatch" parameterType="iterator" useGeneratedKeys="true">
        insert into topic_info(
        name,
        app_id,
        tenant_id,
        topic_owner_type,
        topic_type,
        created,
        created_by,
        updated,
        updated_by
        )
        values
        <foreach collection="array" item="item" separator=",">
            (
            #{item.name},
            #{item.appId},
            #{item.tenantId},
            #{item.topicOwnerType},
            #{item.topicType},
            #{item.created},
            #{item.createdBy},
            #{item.updated},
            #{item.updatedBy}
            )
        </foreach>
    </insert>

</mapper>